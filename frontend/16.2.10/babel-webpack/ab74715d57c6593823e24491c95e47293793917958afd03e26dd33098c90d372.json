{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterPipe {\n  transform(items, searchText) {\n    if (!items) return [];\n    if (!searchText) return items;\n    return items.filter(item => item.name.toLowerCase().includes(searchText.toLowerCase()));\n  }\n  static #_ = this.ɵfac = function FilterPipe_Factory(t) {\n    return new (t || FilterPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"filter\",\n    type: FilterPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["FilterPipe","transform","items","searchText","filter","item","name","toLowerCase","includes","_","_2","pure"],"sources":["/Users/sebastien/Projects/SI_WEB/tp05_pichon_sebastien/src/app/catalogue/filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { Produit } from '../shared/models/produit';\n@Pipe({\n  name: 'filter',\n})\nexport class FilterPipe implements PipeTransform {\n  transform(items: Array<Produit>, searchText: string): Array<Produit> {\n    if (!items) return [];\n    if (!searchText) return items;\n\n    return items.filter((item) =>\n      item.name.toLowerCase().includes(searchText.toLowerCase())\n    );\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,UAAU;EACrBC,SAASA,CAACC,KAAqB,EAAEC,UAAkB;IACjD,IAAI,CAACD,KAAK,EAAE,OAAO,EAAE;IACrB,IAAI,CAACC,UAAU,EAAE,OAAOD,KAAK;IAE7B,OAAOA,KAAK,CAACE,MAAM,CAAEC,IAAI,IACvBA,IAAI,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACL,UAAU,CAACI,WAAW,EAAE,CAAC,CAC3D;EACH;EAAC,QAAAE,CAAA,G;qBARUT,UAAU;EAAA;EAAA,QAAAU,EAAA,G;;UAAVV,UAAU;IAAAW,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}