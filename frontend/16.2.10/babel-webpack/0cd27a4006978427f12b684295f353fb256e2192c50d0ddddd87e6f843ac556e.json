{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Action, Selector, State } from '@ngxs/store';\nimport { AddCart, delFormCart } from '../actions/cart-action';\nimport * as i0 from \"@angular/core\";\nexport let CartState = class CartState {\n  static getNbProduits(state) {\n    return state.products ?? [].length;\n  }\n  static getProductsList(state) {\n    return state.products;\n  }\n  add({\n    getState,\n    patchState\n  }, {\n    payload\n  }) {\n    const state = getState();\n    patchState({\n      products: [...(state.products ?? []), payload]\n    });\n  }\n  del({\n    getState,\n    patchState\n  }, {\n    payload\n  }) {\n    const state = getState();\n    console.log(\"Log\");\n    patchState({\n      products: (state.products ?? []).filter(x => !(payload.name == x.name))\n    });\n  }\n  static #_ = this.ɵfac = function CartState_Factory(t) {\n    return new (t || CartState)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartState,\n    factory: CartState.ɵfac\n  });\n};\n__decorate([Action(AddCart)], CartState.prototype, \"add\", null);\n__decorate([Action(delFormCart)], CartState.prototype, \"del\", null);\n__decorate([Selector()], CartState, \"getNbProduits\", null);\n__decorate([Selector()], CartState, \"getProductsList\", null);\nCartState = __decorate([State({\n  name: 'products',\n  defaults: {\n    products: []\n  }\n})], CartState);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}