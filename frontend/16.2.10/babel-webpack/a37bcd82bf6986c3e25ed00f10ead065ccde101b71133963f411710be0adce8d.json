{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from './environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  loginClient(login, password) {\n    let data;\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    };\n    data = 'login=' + login + '&password=' + password;\n    return this.http.post(environment.backendLoginClient, data, httpOptions);\n  }\n  getCalague() {\n    return this.http.get(environment.backendProduct);\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac\n  });\n}","map":{"version":3,"names":["HttpHeaders","environment","ApiService","constructor","http","loginClient","login","password","data","httpOptions","headers","post","backendLoginClient","getCalague","get","backendProduct","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["/Users/sebastien/Projects/SI_WEB/tp05_pichon_sebastien/src/app/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { Client } from './shared/models/client';\nimport { Product } from './shared/models/product';\nimport { environment } from './environments/environment';\n\n@Injectable()\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n\n  public loginClient(login: string, password: string): Observable<Client> {\n    let data: String;\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded',\n      }),\n    };\n    data = 'login=' + login + '&password=' + password;\n    return this.http.post<Client>(\n      environment.backendLoginClient,\n      data,\n      httpOptions\n    );\n  }\n\n  public getCalague(): Observable<Product[]> {\n    return this.http.get<Product[]>(environment.backendProduct);\n  }\n}"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAK9D,SAASC,WAAW,QAAQ,4BAA4B;;;AAGxD,OAAM,MAAOC,UAAU;EACrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEhCC,WAAWA,CAACC,KAAa,EAAEC,QAAgB;IAChD,IAAIC,IAAY;IAChB,IAAIC,WAAW,GAAG;MAChBC,OAAO,EAAE,IAAIV,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;IACDQ,IAAI,GAAG,QAAQ,GAAGF,KAAK,GAAG,YAAY,GAAGC,QAAQ;IACjD,OAAO,IAAI,CAACH,IAAI,CAACO,IAAI,CACnBV,WAAW,CAACW,kBAAkB,EAC9BJ,IAAI,EACJC,WAAW,CACZ;EACH;EAEOI,UAAUA,CAAA;IACf,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAYb,WAAW,CAACc,cAAc,CAAC;EAC7D;EAAC,QAAAC,CAAA,G;qBApBUd,UAAU,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVnB,UAAU;IAAAoB,OAAA,EAAVpB,UAAU,CAAAqB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}