{"ast":null,"code":"import { AppComponent } from './app.component';\nimport { NgxsModule } from '@ngxs/store';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CatalogModule } from './catalogue/catalog.module';\nimport { CartComponent } from './cart/cart.component';\nimport { StoreModule } from '@ngrx/store';\nimport { CartState } from './shared/states/cart-state';\nimport { ProductsComponent } from './products/products.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ApiService } from './api.service';\nimport { ApiHttpInterceptor } from './http-interceptor';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngxs/store\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ngrx/store\";\nconst routes = [{\n  path: '',\n  component: ProductsComponent\n}, {\n  path: 'cart',\n  component: CartComponent\n}, {\n  path: 'products',\n  component: ProductsComponent\n}];\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static #_ = this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n    static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n    static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [{\n        provide: HTTP_INTERCEPTORS,\n        useClass: ApiHttpInterceptor,\n        multi: true\n      }, ApiService],\n      imports: [BrowserModule, CatalogModule, NgxsModule.forRoot([CartState]), RouterModule.forRoot(routes), StoreModule.forRoot({}, {}), FormsModule, HttpClientModule]\n    });\n  }\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}